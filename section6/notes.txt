Steps to externalise config / build profile configs

1. Create Prod / Dev / QA Profile :
 example content
    spring:
      config:
        activate:
          on-profile: "prod"

    build:
      version: "1.0"

    accounts:
      message: "Welcome to EazyBank accounts related prod APIs "
      contactDetails:
        name: "Reine Aishwarya - Product Owner"
        email: "aishwarya@eazybank.com"
      onCallSupport:
        - (453) 392-4829
        - (236) 203-0384

2. Add profile which you want to activate in default "application.yml" under spring tag
    Example Content :
    spring:
        ,,,,,,<other content>
          profiles:
            active:
              - "qa"

3. Create DTAClass of recordType to
    Example Content :
    import org.springframework.boot.context.properties.ConfigurationProperties;

    import java.util.List;
    import java.util.Map;

    @ConfigurationProperties(prefix = "accounts")
    public record AccountsContactInfoDto(String message, Map<String,String> contactDetails, List<String> onCallSupport) {
    }

4. Add Enable COnfig annotation to main class
    Example content
       @EnableConfigurationProperties(value = {AccountsContactInfoDto.class})

5. Add May be example service to read the config
    Example content
    package : controller -> class : AccountController

        @Autowired
        private AccountsContactInfoDto accountsContactInfoDto;

        @GetMapping("/contact-info")
        public ResponseEntity<AccountsContactInfoDto> getContactInfo(){

            return ResponseEntity
                    .status(HttpStatus.OK)
                    .body(accountsContactInfoDto);
        }